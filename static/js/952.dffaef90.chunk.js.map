{"version":3,"file":"static/js/952.dffaef90.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/index.jsx","pages/MainPage/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 610px;\n  padding: 32px 20px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 100px 32px 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 144px 16px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #212121;\n  font-size: 18px;\n  line-height: 140%;\n  margin-bottom: 34px;\n\n  @media (min-width: 768px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const WrapBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    width: 240px;\n    &:first-of-type {\n      margin-right: 32px;\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 32px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  border: none;\n  width: 100%;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const TitleRadioBtn = styled.p`\n  margin-bottom: 8px;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  padding-bottom: 20px;\n`;\n\nexport const BloodList = styled.ul`\n  display: inline-flex;\n  width: 100%;\n  flex-flow: row no-wrap;\n`;\n\nexport const BloodListItem = styled.li`\n  margin-left: 24px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  &:checked,\n  &:not(:checked) {\n    position: absolute;\n    left: -9999px;\n  }\n  &:checked + label,\n  &:not(:checked) + label {\n    position: relative;\n    padding-left: 28px;\n    cursor: pointer;\n    line-height: 17px;\n    display: inline-block;\n    color: #9b9faa;\n  }\n  &:checked + label:before,\n  &:not(:checked) + label:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #e0e0e0;\n    border-radius: 100%;\n    background: #ffffff;\n  }\n  &:checked + label:after,\n  &:not(:checked) + label:after {\n    content: '';\n    width: 10px;\n    height: 10px;\n    background: #fc842d;\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    border-radius: 100%;\n    -webkit-transition: all 0.25s ease;\n    transition: all 0.25s ease;\n  }\n  &:checked + label {\n    color: #fc842d;\n  }\n  &:not(:checked) + label:after {\n    opacity: 0;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  &:checked + label:after {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  align-self: center;\n  @media screen and (min-width: 768px) {\n    align-self: flex-start;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-left: auto;\n  }\n`;\n","import { Button } from 'components/Button';\nimport {\n  Wrap,\n  Title,\n  Form,\n  Label,\n  Input,\n  BloodList,\n  RadioButton,\n  ButtonContainer,\n  BloodListItem,\n  WrapBox,\n} from './DailyCaloriesForm.styled';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeUserDate } from '../../redux/user/slice';\nimport { toggleModal } from '../../redux/modal/slice';\nimport { getDiet } from '../../redux/bloodDiet/operations';\nimport { useSelector } from 'react-redux';\n\nexport const DailyCaloriesForm = () => {\n  const [height, setHeight] = useState('');\n  const [age, setAge] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [desiredWeight, setDesiredWeight] = useState('');\n  const [bloodType, setBloodType] = useState(null);\n\n  const dispatch = useDispatch();\n  const savedFormData = useSelector(state => state.user.userDate);\n  const token = useSelector(state => state.login.token);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'height':\n        setHeight(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      case 'currentWeight':\n        setCurrentWeight(value);\n        break;\n      case 'desiredWeight':\n        setDesiredWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleRadioChange = event => {\n    setBloodType(event.target.value);\n  };\n\n  const reset = () => {\n    setHeight('');\n    setAge('');\n    setCurrentWeight('');\n    setDesiredWeight('');\n    setBloodType('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(\n      changeUserDate({\n        height: height,\n        age: age,\n        cWeight: currentWeight,\n        dWeight: desiredWeight,\n        blood: bloodType,\n      })\n    );\n    try {\n      await dispatch(\n        getDiet({\n          height: Number(height),\n          age: Number(age),\n          cWeight: Number(currentWeight),\n          dWeight: Number(desiredWeight),\n          blood: Number(bloodType),\n        })\n      );\n      dispatch(toggleModal(true));\n    } catch {\n      console.log(Error);\n    }\n    reset();\n  };\n\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form onSubmit={handleSubmit}>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            {token ? (\n              <Input\n                pattern=\"[0-9]\"\n                required\n                id=\"height\"\n                type=\"number\"\n                name=\"height\"\n                defaultValue={savedFormData.height}\n                onChange={handleInputChange}\n              />\n            ) : (\n              <Input\n                pattern=\"[0-9]\"\n                required\n                id=\"height\"\n                type=\"number\"\n                name=\"height\"\n                defaultValue={''}\n                onChange={handleInputChange}\n              />\n            )}\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            {token ? (\n              <Input\n                pattern=\"[0-9]\"\n                id=\"age\"\n                required\n                type=\"number\"\n                name=\"age\"\n                defaultValue={savedFormData.age}\n                onChange={handleInputChange}\n              />\n            ) : (\n              <Input\n                pattern=\"[0-9]\"\n                id=\"age\"\n                required\n                type=\"number\"\n                name=\"age\"\n                defaultValue={''}\n                onChange={handleInputChange}\n              />\n            )}\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            {token ? (\n              <Input\n                pattern=\"[0-9]\"\n                required\n                id=\"currentWeight\"\n                type=\"number\"\n                name=\"currentWeight\"\n                defaultValue={savedFormData.cWeight}\n                onChange={handleInputChange}\n              />\n            ) : (\n              <Input\n                pattern=\"[0-9]\"\n                required\n                id=\"currentWeight\"\n                type=\"number\"\n                name=\"currentWeight\"\n                defaultValue={''}\n                onChange={handleInputChange}\n              />\n            )}\n            {/*\n  TitleRadioBtn,\n} from './DailyCaloriesForm.styled';\n\nexport const DailyCaloriesForm = () => {\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input pattern=\"[0-9]\" id=\"age\" required type=\"number\" name=\"age\" />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n            />\n*/}\n          </Label>\n        </WrapBox>\n        <WrapBox>\n          <Label htmlFor=\"desiredWeight\">\n            Desired weight *\n            {token ? (\n              <Input\n                pattern=\"[0-9]\"\n                id=\"desiredWeight\"\n                required\n                name=\"desiredWeight\"\n                type=\"number\"\n                defaultValue={savedFormData.dWeight}\n                onChange={handleInputChange}\n              />\n            ) : (\n              <Input\n                pattern=\"[0-9]\"\n                id=\"desiredWeight\"\n                required\n                name=\"desiredWeight\"\n                type=\"number\"\n                defaultValue={''}\n                onChange={handleInputChange}\n              />\n            )}\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <p style={{ marginBottom: '8px' }}>Blood type *</p>\n\n            {/* \n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <TitleRadioBtn style={{ marginBottom: '8px' }}>\n              Blood type *\n            </TitleRadioBtn>\n            */}\n\n            <BloodList>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-1\"\n                  value={1}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-1\">1</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-2\"\n                  value={2}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-2\">2</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-3\"\n                  value={3}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-3\">3</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-4\"\n                  value={4}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-4\">4</label>\n              </BloodListItem>\n            </BloodList>\n          </Label>\n        </WrapBox>\n\n        <ButtonContainer>\n          <Button type=\"submit\" text=\"Start losing weight\" />\n        </ButtonContainer>\n      </Form>\n    </Wrap>\n  );\n};\n","// import Loader from 'components/Loader/Loader';\nimport { DailyCaloriesForm } from 'components/DailyCaloriesForm';\n\nconst MainPage = () => {\n  return (\n    <>\n      {/* <Loader /> */}\n      <DailyCaloriesForm />\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["Wrap","styled","Title","Form","WrapBox","Label","Input","BloodList","BloodListItem","RadioButton","ButtonContainer","DailyCaloriesForm","useState","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","dispatch","useDispatch","savedFormData","useSelector","state","user","userDate","token","login","handleInputChange","event","currentTarget","name","value","handleRadioChange","target","handleSubmit","preventDefault","changeUserDate","cWeight","dWeight","blood","getDiet","Number","toggleModal","console","log","Error","onSubmit","htmlFor","pattern","required","id","type","defaultValue","onChange","style","marginBottom","Button","text"],"sourceRoot":""}