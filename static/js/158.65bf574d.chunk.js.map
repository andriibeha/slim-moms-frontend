{"version":3,"file":"static/js/158.65bf574d.chunk.js","mappings":"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","sources":["components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/index.jsx","pages/Calculator/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 610px;\n  padding: 32px 20px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 100px 32px 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 144px 16px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #212121;\n  font-size: 18px;\n  line-height: 140%;\n  margin-bottom: 34px;\n\n  @media (min-width: 768px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const WrapBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    width: 240px;\n    &:first-of-type {\n      margin-right: 32px;\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 32px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  border: none;\n  width: 100%;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const TitleRadioBtn = styled.p`\n  margin-bottom: 8px;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  padding-bottom: 20px;\n`;\n\nexport const BloodList = styled.ul`\n  display: inline-flex;\n  width: 100%;\n  flex-flow: row no-wrap;\n`;\n\nexport const BloodListItem = styled.li`\n  margin-left: 24px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  &:checked,\n  &:not(:checked) {\n    position: absolute;\n    left: -9999px;\n  }\n  &:checked + label,\n  &:not(:checked) + label {\n    position: relative;\n    padding-left: 28px;\n    cursor: pointer;\n    line-height: 17px;\n    display: inline-block;\n    color: #9b9faa;\n  }\n  &:checked + label:before,\n  &:not(:checked) + label:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #e0e0e0;\n    border-radius: 100%;\n    background: #ffffff;\n  }\n  &:checked + label:after,\n  &:not(:checked) + label:after {\n    content: '';\n    width: 10px;\n    height: 10px;\n    background: #fc842d;\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    border-radius: 100%;\n    -webkit-transition: all 0.25s ease;\n    transition: all 0.25s ease;\n  }\n  &:checked + label {\n    color: #fc842d;\n  }\n  &:not(:checked) + label:after {\n    opacity: 0;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  &:checked + label:after {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  align-self: center;\n  @media screen and (min-width: 768px) {\n    align-self: flex-start;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-left: auto;\n  }\n`;\n","import { Button } from 'components/Button';\nimport {\n  Wrap,\n  Title,\n  Form,\n  Label,\n  Input,\n  BloodList,\n  RadioButton,\n  ButtonContainer,\n  BloodListItem,\n  WrapBox,\n} from './DailyCaloriesForm.styled';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeUserDate } from '../../redux/user/slice';\nimport { toggleModal } from '../../redux/modal/slice';\nimport { getDiet, getDietUser } from '../../redux/bloodDiet/operations';\nimport { useSelector } from 'react-redux';\n\nexport const DailyCaloriesForm = () => {\n  const [height, setHeight] = useState('');\n  const [age, setAge] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [desiredWeight, setDesiredWeight] = useState('');\n  const [bloodType, setBloodType] = useState(null);\n\n  const dispatch = useDispatch();\n  const savedFormData = useSelector(state => state.user.userDate);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'height':\n        setHeight(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      case 'currentWeight':\n        setCurrentWeight(value);\n        break;\n      case 'desiredWeight':\n        setDesiredWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleRadioChange = event => {\n    setBloodType(event.target.value);\n    localStorage.setItem('bloodType', JSON.stringify(event.target.value))\n  };\n\n  const reset = () => {\n    setHeight('');\n    setAge('');\n    setCurrentWeight('');\n    setDesiredWeight('');\n    setBloodType('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(\n      changeUserDate({\n        height: height,\n        age: age,\n        curWeight: currentWeight,\n        desWeight: desiredWeight,\n        bloodType: bloodType,\n      })\n    );\n    if (isLoggedIn) {\n      try {\n        await dispatch(\n          getDietUser({\n            height: Number(height),\n            age: Number(age),\n            curWeight: Number(currentWeight),\n            desWeight: Number(desiredWeight),\n            bloodType: Number(bloodType),\n          })\n        );\n        dispatch(toggleModal(true));\n      } catch {\n        console.log(Error);\n      }\n    } else {\n      try {\n        await dispatch(\n          getDiet({\n            height: Number(height),\n            age: Number(age),\n            curWeight: Number(currentWeight),\n            desWeight: Number(desiredWeight),\n            bloodType: Number(bloodType),\n          })\n        );\n        dispatch(toggleModal(true));\n      } catch {\n        console.log(Error);\n      }\n    }\n    reset();\n  };\n\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form onSubmit={handleSubmit}>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n              defaultValue={isLoggedIn ? savedFormData.height : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"age\"\n              required\n              type=\"number\"\n              name=\"age\"\n              defaultValue={isLoggedIn ? savedFormData.age : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n              defaultValue={isLoggedIn ? savedFormData.curWeight : ''}\n              onChange={handleInputChange}\n            />\n            {/*\n  TitleRadioBtn,\n} from './DailyCaloriesForm.styled';\n\nexport const DailyCaloriesForm = () => {\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input pattern=\"[0-9]\" id=\"age\" required type=\"number\" name=\"age\" />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n            />\n*/}\n          </Label>\n        </WrapBox>\n        <WrapBox>\n          <Label htmlFor=\"desiredWeight\">\n            Desired weight *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n              defaultValue={isLoggedIn ? savedFormData.desWeight : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <p style={{ marginBottom: '8px' }}>Blood type *</p>\n\n            {/* \n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <TitleRadioBtn style={{ marginBottom: '8px' }}>\n              Blood type *\n            </TitleRadioBtn>\n            */}\n\n            <BloodList>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-1\"\n                  value={1}\n                  defaultChecked={\n                    isLoggedIn && savedFormData.bloodType === '1' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-1\">1</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-2\"\n                  value={2}\n                  defaultChecked={\n                    isLoggedIn && savedFormData.bloodType === '2' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-2\">2</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-3\"\n                  value={3}\n                  defaultChecked={\n                    isLoggedIn && savedFormData.bloodType === '3' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-3\">3</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-4\"\n                  value={4}\n                  defaultChecked={\n                    isLoggedIn && savedFormData.bloodType === '4' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-4\">4</label>\n              </BloodListItem>\n            </BloodList>\n          </Label>\n        </WrapBox>\n\n        <ButtonContainer>\n          <Button type=\"submit\" text=\"Start losing weight\" />\n        </ButtonContainer>\n      </Form>\n    </Wrap>\n  );\n};\n","import { DailyCaloriesForm } from 'components/DailyCaloriesForm';\nconst Calculator = () => {\n  return <DailyCaloriesForm />;\n};\n\nexport default Calculator;\n"],"names":["Wrap","styled","Title","Form","WrapBox","Label","Input","BloodList","BloodListItem","RadioButton","ButtonContainer","DailyCaloriesForm","useState","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","dispatch","useDispatch","savedFormData","useSelector","state","user","userDate","isLoggedIn","auth","handleInputChange","event","currentTarget","name","value","handleRadioChange","target","localStorage","setItem","JSON","stringify","handleSubmit","preventDefault","changeUserDate","curWeight","desWeight","getDietUser","Number","toggleModal","console","log","Error","getDiet","onSubmit","htmlFor","pattern","required","id","type","defaultValue","onChange","style","marginBottom","defaultChecked","Button","text"],"sourceRoot":""}