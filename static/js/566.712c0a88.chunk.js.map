{"version":3,"file":"static/js/566.712c0a88.chunk.js","mappings":"4MAGe,SAASA,IACtB,OACE,SAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAAnC,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,aAIhB,C,6DCdYC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mFAKTE,EAAQF,EAAAA,GAAAA,MAAH,8GAMLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yJAQLK,EAAYL,EAAAA,GAAAA,EAAH,gF,UChBhBM,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAACJ,EAAD,UAAYI,GAAhB,GAGpB,EAEKC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJE,MAAM,8BACNC,SAAS,6BACZC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,0CACPC,IAAI,EAAG,yCACPH,SAAS,kCAGRI,EAAgB,CACpBL,MAAO,GACPE,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,eAMjB,OACE,+BACE,SAAC,KAAD,CACEH,cAAeA,EACfI,SATe,SAAC,EAAD,GAAyC,IAAtCT,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAcQ,EAAgB,EAAhBA,UAC3CH,GAASI,EAAAA,EAAAA,GAAM,CAAEX,MAAAA,EAAOE,SAAAA,KACxBQ,GACD,EAOKE,iBAAkBf,EAHpB,UAKE,UAACX,EAAD,CAAW2B,aAAa,MAAxB,WACE,UAACxB,EAAD,CAAOyB,QAAQ,QAAf,WACE,SAACxB,EAAD,CAAOyB,KAAK,QAAQrB,KAAK,QAAQsB,YAAY,aAC7C,SAACvB,EAAD,CAAWC,KAAK,QAAQuB,UAAU,UAEpC,UAAC5B,EAAD,CAAOyB,QAAQ,WAAf,WACE,SAACxB,EAAD,CACEyB,KAAK,WACLrB,KAAK,WACLsB,YAAY,gBAEd,SAACvB,EAAD,CAAWC,KAAK,WAAWuB,UAAU,UAEvC,mBAAQF,KAAK,SAAb,qBACA,mBAAQA,KAAK,SAAb,4BAKT,ECjEYG,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SAAhB,EAEvBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,IAAhB,ECa/B,EAXc,WACZ,IAAQF,ECDD,CACLE,MAAMC,EAAAA,EAAAA,aAAYF,GAClBD,WAAWG,EAAAA,EAAAA,aAAYN,IDDjBG,UACR,OACE,iCACE,oCACA,SAACf,EAAD,IACCe,IAAa,SAAC9C,EAAD,MAGnB,C","sources":["components/Loader/Loader.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/index.jsx","redux/login/selectors.jsx","pages/Login/index.jsx","hooks/useAuth.jsx"],"sourcesContent":["import { Box } from 'components/Box';\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport default function Loader() {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <ProgressBar\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#3d3d3d\"\n        barColor=\"#777777\"\n      />\n    </Box>\n  );\n}\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormLogIn = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n`;\nexport const Input = styled(Field)`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  outline-color: blue;\n  width: 280px;\n  hieght: 38px;\n  padding: 5px;\n`;\nexport const ErrorText = styled.p`\n  color: red;\n  width: 300px;\n  text-align: justify;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { FormLogIn, Input, Label, ErrorText } from './LoginForm.styled';\nimport { logIn } from 'redux/login/operations';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Email is a required field'),\n  password: yup\n    .string()\n    .min(3, 'Password must be at least 3 characters')\n    .max(8, 'Password must be at most 8 characters')\n    .required('Password is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const FormLogin = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormLogIn autoComplete=\"off\">\n          <Label htmlFor=\"email\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email *\"></Input>\n            <FormError name=\"email\" component=\"p\" />\n          </Label>\n          <Label htmlFor=\"password\">\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password *\"\n            ></Input>\n            <FormError name=\"password\" component=\"p\" />\n          </Label>\n          <button type=\"submit\">Log in</button>\n          <button type=\"button\">Register</button>\n        </FormLogIn>\n      </Formik>\n    </>\n  );\n};\n","export const selectIsLoading = state => state.login.isLoading;\n\nexport const selectUser = state => state.login.user;\n","import Loader from 'components/Loader/Loader';\nimport { FormLogin } from 'components/LoginForm';\nimport { useAuth } from 'hooks/useAuth';\n\nconst Login = () => {\n  const { isLoading } = useAuth();\n  return (\n    <>\n      <h2>LOG IN</h2>\n      <FormLogin />\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Login;\n","import { useSelector } from 'react-redux';\nimport { selectUser, selectIsLoading } from 'redux/login/selectors';\n\nexport const useAuth = () => {\n  return {\n    user: useSelector(selectUser),\n    isLoading: useSelector(selectIsLoading),\n  };\n};\n"],"names":["Loader","Box","display","justifyContent","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","FormLogIn","styled","Form","Label","Input","Field","ErrorText","FormError","name","render","message","schema","yup","shape","email","required","password","min","max","initialValues","FormLogin","dispatch","useDispatch","onSubmit","resetForm","logIn","validationSchema","autoComplete","htmlFor","type","placeholder","component","selectIsLoading","state","login","isLoading","selectUser","user","useSelector"],"sourceRoot":""}