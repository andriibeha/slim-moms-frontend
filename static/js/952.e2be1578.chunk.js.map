{"version":3,"file":"static/js/952.e2be1578.chunk.js","mappings":"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","sources":["components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/index.jsx","components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/index.jsx","pages/MainPage/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport tabletImg from '../../images/leaves_tablet-calculator1_1x.webp'; \nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 20px 12px 20px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: 80px 32px 40px 32px;\n    background-image: url(${tabletImg});\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding: 149px 94px 116px 94px;\n    background-image:  url(${require(`../../images/leaves_desktop-calculator_1x.webp`)}); \n  }\n`;\n\nexport const BoxList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    margin-right: 97px;\n  }\n`;\n\nexport const ListTitle = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #212121;\n  text-align: start;\n  margin-bottom: 20px;\n  }\n`;\n\nexport const List = styled('ul')`\nlist-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  list-style-position: inside;\n  margin: 0;\n  padding: 0;\n  }\n`;\n\nexport const Item = styled.li`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const CalcItem = styled.tr`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const PreContent = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const CalcTitle = styled.td`\n  width: 180px;\n  @media screen and (min-width: 768px) {\n    width: 182px;\n  }\n`;\n","import React from 'react';\nimport {\n  Box,\n  List,\n  ListTitle,\n  PreContent,\n  Item,\n  BoxList,\n  CalcItem,\n  CalcTitle,\n} from './RightSideBar.styled';\n\nconst dataArray = {\n  products: [\n    {\n      _id: '5d51694802b2373622ff5569',\n      categories: ['зерновые'],\n      weight: 100,\n      title: {\n        ru: 'Гречневые хлопья Пассим',\n        ua: 'Гречані пластівці Пассим',\n      },\n      calories: 322,\n      groupBloodNotAllowed: [null, true, false, true, true],\n      __v: 0,\n    },\n    {\n      _id: '5d51694802b2373622ff555a',\n      categories: ['зерновые'],\n      weight: 100,\n      title: {\n        ru: 'Гречневая крупа (продел)',\n        ua: 'Гречана крупа (проділ)',\n      },\n      calories: 306,\n      groupBloodNotAllowed: [null, true, false, true, true],\n      __v: 0,\n    },\n  ],\n  dailyCalorie: 0,\n  consumedCalories: 0,\n  currentDate: \"22.12.2022\",\n};\n\nexport const RightSideBar = () => {\n  const leftCalories = dataArray.dailyCalorie - dataArray.consumedCalories;\n  const percentOfNormal = (leftCalories / dataArray.dailyCalorie) * 100;\n\n  return (\n    <Box>\n      <BoxList>\n        <ListTitle>Summary for {dataArray.currentDate}</ListTitle>\n        <List as=\"table\">\n          <CalcItem>\n            <CalcTitle>Left</CalcTitle>\n            <td>{leftCalories > 0 ? leftCalories : 0} kcal</td>\n          </CalcItem>\n          <CalcItem>\n            <CalcTitle>Consumed</CalcTitle>\n            <td>\n              {dataArray.consumedCalories > 0 ? dataArray.consumedCalories : 0}{' '}\n              kcal\n            </td>\n          </CalcItem>\n          <CalcItem>\n            <CalcTitle>Daily rate </CalcTitle>\n            <td>\n              {dataArray.dailyCalorie > 0 ? dataArray.dailyCalorie : 0} kcal\n            </td>\n          </CalcItem>\n          <CalcItem>\n            <CalcTitle>% of normal</CalcTitle>\n            <td>{percentOfNormal > 0 ? Math.round(percentOfNormal) : 0} %</td>\n          </CalcItem>\n        </List>\n      </BoxList>\n      <BoxList>\n        <ListTitle>Food not recommended</ListTitle>\n\n        {dataArray.dailyCalorie > 0 ? (\n          <List as=\"ol\">\n            {dataArray.products.map(product => (\n              <Item key={product._id}>{product.title.ua}</Item>\n            ))}\n          </List>\n        ) : (\n          <PreContent> Your diet will be displayed here </PreContent>\n        )}\n      </BoxList>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 610px;\n  padding: 32px 20px 0;\n\n  @media screen and (min-width: 768px) {\n    padding: 100px 32px 0;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 144px 16px 0;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #212121;\n  font-size: 18px;\n  line-height: 140%;\n  margin-bottom: 34px;\n\n  @media (min-width: 768px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const WrapBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    width: 240px;\n    &:first-of-type {\n      margin-right: 32px;\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 32px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  border: none;\n  width: 100%;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const TitleRadioBtn = styled.p`\n  margin-bottom: 8px;\n  border-bottom: 1px solid rgb(224, 224, 224);\n  padding-bottom: 20px;\n`;\n\nexport const BloodList = styled.ul`\n  display: inline-flex;\n  width: 100%;\n  flex-flow: row no-wrap;\n`;\n\nexport const BloodListItem = styled.li`\n  margin-left: 24px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  &:checked,\n  &:not(:checked) {\n    position: absolute;\n    left: -9999px;\n  }\n  &:checked + label,\n  &:not(:checked) + label {\n    position: relative;\n    padding-left: 28px;\n    cursor: pointer;\n    line-height: 17px;\n    display: inline-block;\n    color: #9b9faa;\n  }\n  &:checked + label:before,\n  &:not(:checked) + label:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #e0e0e0;\n    border-radius: 100%;\n    background: #ffffff;\n  }\n  &:checked + label:after,\n  &:not(:checked) + label:after {\n    content: '';\n    width: 10px;\n    height: 10px;\n    background: #fc842d;\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    border-radius: 100%;\n    -webkit-transition: all 0.25s ease;\n    transition: all 0.25s ease;\n  }\n  &:checked + label {\n    color: #fc842d;\n  }\n  &:not(:checked) + label:after {\n    opacity: 0;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  &:checked + label:after {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  align-self: center;\n  @media screen and (min-width: 768px) {\n    align-self: flex-start;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-left: auto;\n  }\n`;\n","import { Button } from 'components/Button';\nimport {\n  Wrap,\n  Title,\n  Form,\n  Label,\n  Input,\n  BloodList,\n  RadioButton,\n  ButtonContainer,\n  BloodListItem,\n  WrapBox,\n} from './DailyCaloriesForm.styled';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeUserDate } from '../../redux/user/slice';\nimport { toggleModal } from '../../redux/modal/slice';\nimport { getDiet } from '../../redux/bloodDiet/operations';\nimport { useSelector } from 'react-redux';\n\nexport const DailyCaloriesForm = () => {\n  const [height, setHeight] = useState('');\n  const [age, setAge] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [desiredWeight, setDesiredWeight] = useState('');\n  const [bloodType, setBloodType] = useState(null);\n\n  const dispatch = useDispatch();\n  const savedFormData = useSelector(state => state.user.userDate);\n  const token = useSelector(state => state.login.token);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'height':\n        setHeight(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      case 'currentWeight':\n        setCurrentWeight(value);\n        break;\n      case 'desiredWeight':\n        setDesiredWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleRadioChange = event => {\n    setBloodType(event.target.value);\n  };\n\n  const reset = () => {\n    setHeight('');\n    setAge('');\n    setCurrentWeight('');\n    setDesiredWeight('');\n    setBloodType('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(\n      changeUserDate({\n        height: height,\n        age: age,\n        cWeight: currentWeight,\n        dWeight: desiredWeight,\n        blood: bloodType,\n      })\n    );\n    try {\n      await dispatch(\n        getDiet({\n          height: Number(height),\n          age: Number(age),\n          cWeight: Number(currentWeight),\n          dWeight: Number(desiredWeight),\n          blood: Number(bloodType),\n        })\n      );\n      dispatch(toggleModal(true));\n    } catch {\n      console.log(Error);\n    }\n    reset();\n  };\n\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form onSubmit={handleSubmit}>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n              defaultValue={token ? savedFormData.height : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"age\"\n              required\n              type=\"number\"\n              name=\"age\"\n              defaultValue={token ? savedFormData.age : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n              defaultValue={token ? savedFormData.cWeight : ''}\n              onChange={handleInputChange}\n            />\n            {/*\n  TitleRadioBtn,\n} from './DailyCaloriesForm.styled';\n\nexport const DailyCaloriesForm = () => {\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input pattern=\"[0-9]\" id=\"age\" required type=\"number\" name=\"age\" />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n            />\n*/}\n          </Label>\n        </WrapBox>\n        <WrapBox>\n          <Label htmlFor=\"desiredWeight\">\n            Desired weight *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n              defaultValue={token ? savedFormData.dWeight : ''}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <p style={{ marginBottom: '8px' }}>Blood type *</p>\n\n            {/* \n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <TitleRadioBtn style={{ marginBottom: '8px' }}>\n              Blood type *\n            </TitleRadioBtn>\n            */}\n\n            <BloodList>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-1\"\n                  value={1}\n                  defaultChecked={\n                    token && savedFormData.blood === '1' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-1\">1</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-2\"\n                  value={2}\n                  defaultChecked={\n                    token && savedFormData.blood === '2' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-2\">2</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-3\"\n                  value={3}\n                  defaultChecked={\n                    token && savedFormData.blood === '3' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-3\">3</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-4\"\n                  value={4}\n                  defaultChecked={\n                    token && savedFormData.blood === '4' ? true : false\n                  }\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-4\">4</label>\n              </BloodListItem>\n            </BloodList>\n          </Label>\n        </WrapBox>\n\n        <ButtonContainer>\n          <Button type=\"submit\" text=\"Start losing weight\" />\n        </ButtonContainer>\n      </Form>\n    </Wrap>\n  );\n};\n","// import Loader from 'components/Loader/Loader';\nimport { DailyCaloriesForm } from 'components/DailyCaloriesForm';\nimport { RightSideBar } from 'components/RightSideBar';\n\nconst MainPage = () => {\n  return (\n    <>\n      {/* <Loader /> */}\n      <DailyCaloriesForm />\n      <RightSideBar />;\n    </>\n  );\n};\n\nexport default MainPage;\n"],"names":["Box","styled","tabletImg","require","BoxList","ListTitle","List","Item","CalcItem","PreContent","CalcTitle","dataArray","products","_id","categories","weight","title","ru","ua","calories","groupBloodNotAllowed","__v","dailyCalorie","consumedCalories","currentDate","RightSideBar","leftCalories","percentOfNormal","as","Math","round","map","product","Wrap","Title","Form","WrapBox","Label","Input","BloodList","BloodListItem","RadioButton","ButtonContainer","DailyCaloriesForm","useState","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","dispatch","useDispatch","savedFormData","useSelector","state","user","userDate","token","login","handleInputChange","event","currentTarget","name","value","handleRadioChange","target","handleSubmit","preventDefault","changeUserDate","cWeight","dWeight","blood","getDiet","Number","toggleModal","console","log","Error","onSubmit","htmlFor","pattern","required","id","type","defaultValue","onChange","style","marginBottom","defaultChecked","Button","text"],"sourceRoot":""}