{"version":3,"file":"static/js/666.082069af.chunk.js","mappings":"yLAEaA,EAAmBC,EAAAA,EAAAA,IAAH,yDAKhBC,EAAYD,EAAAA,EAAAA,IAAH,8MAcTE,EAAkBF,EAAAA,EAAAA,IAAH,oO,iDCTfG,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OACE,UAACL,EAAD,YACE,SAACE,EAAD,CAAWI,IAAI,KAAKC,IAAKC,EACvBC,OAAM,UAAKC,EAAL,UAIR,SAACP,EAAD,CACEG,IAAI,KACJC,IAAKI,EACLF,OAAM,UAAKG,EAAL,SAEPP,IAGN,C,wJC1BYQ,EAAOZ,EAAAA,EAAAA,IAAH,qSAcJa,EAAQb,EAAAA,EAAAA,GAAH,0NAaLc,EAAOd,EAAAA,EAAAA,KAAH,oKASJe,EAAUf,EAAAA,EAAAA,IAAH,uOAaPgB,EAAQhB,EAAAA,EAAAA,MAAH,sTAqCLiB,GApBajB,EAAAA,EAAAA,MAAH,oMAUOA,EAAAA,EAAAA,EAAH,2IAUNA,EAAAA,EAAAA,MAAH,gVA0BLkB,GANgBlB,EAAAA,EAAAA,EAAH,6GAMDA,EAAAA,EAAAA,GAAH,6FAMTmB,EAAgBnB,EAAAA,EAAAA,GAAH,6FAOboB,EAAcpB,EAAAA,EAAAA,MAAH,ioCAuDXqB,EAAkBrB,EAAAA,EAAAA,IAAH,mM,sEC/JfsB,EAAoB,WAC/B,OAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,IAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACA,GAA0CN,EAAAA,EAAAA,UAAS,IAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAA0CR,EAAAA,EAAAA,UAAS,IAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,QAAf,IACjCC,GAAaJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMI,KAAKD,UAAf,IAC9BE,EAAMC,OAAOC,WAAW,uBAE9BC,EAAAA,EAAAA,YAAU,WACJL,IACFhB,EAAUW,EAAcZ,QACxBG,EAAOS,EAAcV,KACrBG,EAAiBO,EAAcW,WAC/BhB,EAAiBK,EAAcY,WAC/Bf,EAAaG,EAAcJ,WAE9B,GAAE,CAACS,EAAYL,IAEhB,IAAMa,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,SACH3B,EAAU4B,GACV,MACF,IAAK,MACH1B,EAAO0B,GACP,MACF,IAAK,gBACHxB,EAAiBwB,GACjB,MACF,IAAK,gBACHtB,EAAiBsB,GACjB,MACF,QACE,OAEL,EAEKC,EAAoB,SAAAJ,GACxBjB,EAAaiB,EAAMK,OAAOF,OAC1BG,aAAaC,QAAQ,YAAaC,KAAKC,UAAUT,EAAMK,OAAOF,OAC/D,EAUKO,EAAY,mCAAG,WAAMV,GAAN,oEACnBA,EAAMW,iBACN3B,GACE4B,EAAAA,EAAAA,GAAe,CACbtC,OAAQA,EACRE,IAAKA,EACLqB,UAAWnB,EACXoB,UAAWlB,EACXE,UAAWA,MAGXS,EAXe,0CAaTP,GACJ6B,EAAAA,EAAAA,aAAY,CACVvC,OAAQwC,OAAOxC,GACfE,IAAKsC,OAAOtC,GACZqB,UAAWiB,OAAOpC,GAClBoB,UAAWgB,OAAOlC,GAClBE,UAAWgC,OAAOhC,MAnBP,OAsBXW,EAAIsB,QACN/B,GAASgC,EAAAA,EAAAA,IAAY,IAErB3C,GAAc,GAzBD,sDA4BT,IAAI4C,MA5BK,2DAgCTjC,GACJkC,EAAAA,EAAAA,SAAQ,CACN5C,OAAQwC,OAAOxC,GACfE,IAAKsC,OAAOtC,GACZqB,UAAWiB,OAAOpC,GAClBoB,UAAWgB,OAAOlC,GAClBE,UAAWgC,OAAOhC,MAtCP,QA0CXW,EAAIsB,QACN/B,GAASgC,EAAAA,EAAAA,IAAY,IAErB3C,GAAc,GA7CD,yDAgDT,IAAI4C,MAhDK,QAPnB1C,EAAU,IACVE,EAAO,IACPE,EAAiB,IACjBE,EAAiB,IACjBE,EAAa,IAGM,iEAAH,sDAqDlB,OAAIX,GAAcmB,GAAmB,SAAC,KAAD,CAAU4B,GAAG,WAC9C/C,IAAemB,GAAmB,SAAC,KAAD,CAAU4B,GAAG,WAGjD,UAAC3D,EAAD,YACE,SAACC,EAAD,6DACA,UAACC,EAAD,CAAM0D,SAAUV,EAAhB,WACE,UAAC/C,EAAD,YACE,UAACC,EAAD,CAAOyD,QAAQ,SAAf,sBAEE,SAACxD,EAAD,CACEyD,QAAQ,QACRC,UAAQ,EACRC,GAAG,SACHC,KAAK,SACLvB,KAAK,SACLC,MAAO7B,EACPoD,SAAU3B,QAGd,UAACnC,EAAD,CAAOyD,QAAQ,MAAf,mBAEE,SAACxD,EAAD,CACEyD,QAAQ,QACRE,GAAG,MACHD,UAAQ,EACRE,KAAK,SACLvB,KAAK,MACLC,MAAO3B,EACPkD,SAAU3B,QAGd,UAACnC,EAAD,CAAOyD,QAAQ,gBAAf,8BAEE,SAACxD,EAAD,CACEyD,QAAQ,QACRC,UAAQ,EACRC,GAAG,gBACHC,KAAK,SACLvB,KAAK,gBACLC,MAAOzB,EACPgD,SAAU3B,WAIhB,UAACpC,EAAD,YACE,UAACC,EAAD,CAAOyD,QAAQ,gBAAf,8BAEE,SAACxD,EAAD,CACEyD,QAAQ,QACRE,GAAG,gBACHD,UAAQ,EACRrB,KAAK,gBACLuB,KAAK,SACLtB,MAAOvB,EACP8C,SAAU3B,QAGd,UAACnC,EAAD,CAAOyD,QAAQ,YAAYE,UAAQ,EAAnC,WACE,cAAGI,MAAO,CAAEC,aAAc,OAA1B,2BACA,UAAC9D,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CACEyD,KAAK,QAELvB,KAAK,YACLsB,GAAG,cACHrB,MAAO,EACP0B,QAAuB,MAAd/C,EACT4C,SAAUtB,KAEZ,kBAAOiB,QAAQ,cAAf,mBAEF,UAACtD,EAAD,YACE,SAACC,EAAD,CACEyD,KAAK,QACLvB,KAAK,YACLsB,GAAG,cACHrB,MAAO,EACP0B,QAAuB,MAAd/C,EACT4C,SAAUtB,KAEZ,kBAAOiB,QAAQ,cAAf,mBAEF,UAACtD,EAAD,YACE,SAACC,EAAD,CACEyD,KAAK,QACLvB,KAAK,YACLsB,GAAG,cACHrB,MAAO,EACP0B,QAAuB,MAAd/C,EACT4C,SAAUtB,KAEZ,kBAAOiB,QAAQ,cAAf,mBAEF,UAACtD,EAAD,YACE,SAACC,EAAD,CACEyD,KAAK,QACLvB,KAAK,YACLsB,GAAG,cACHrB,MAAO,EACP0B,QAAuB,MAAd/C,EACT4C,SAAUtB,KAEZ,kBAAOiB,QAAQ,cAAf,4BAKR,SAACpD,EAAD,WACE,SAAC6D,EAAA,GAAD,CAAQL,KAAK,SAASM,KAAK,+BAKpC,C,0GCrPYC,EAAMpF,EAAAA,EAAAA,IAAH,mWAgBHqF,EAAUrF,EAAAA,EAAAA,IAAH,+NAWPsF,EAAYtF,EAAAA,EAAAA,EAAH,qOAYTuF,GAAOvF,EAAAA,EAAAA,GAAO,KAAPA,CAAH,iRAcJwF,EAAOxF,EAAAA,EAAAA,GAAH,+PAeJyF,EAAazF,EAAAA,EAAAA,EAAH,uLASV0F,EAAY1F,EAAAA,EAAAA,IAAH,+JAQT2F,EAAgB3F,EAAAA,EAAAA,IAAH,wIAQba,EAAQb,EAAAA,EAAAA,IAAH,2GAML4F,EAAU5F,EAAAA,EAAAA,IAAH,wC,wCCpFP6F,EAAe,WAC1B,IAAQpD,GAASqD,EAAAA,EAAAA,KAATrD,KACFsD,EAAiBtD,EAAKuD,KAAKvD,KAAKsD,eAChCE,EAAexD,EAAKuD,KAAKvD,KAAKwD,aAE9BC,GAAmB3D,EAAAA,EAAAA,IAAY4D,EAAAA,EAAAA,wBAC/BC,GAAe7D,EAAAA,EAAAA,IAAY4D,EAAAA,EAAAA,YAC3BE,EAAyB,IAAIC,KAAKF,GACrCG,eAAe,IACfC,MAAM,EAAG,IACJC,EAAO,IAAIH,KAAKA,KAAKI,IAAI,KAAM,GAAI,GAAI,EAAG,EAAG,IACnDC,QAAQC,IAAIH,EAAKF,kBACnB,IAAMM,EAAeZ,EAAeC,EAC9BY,EAAmBZ,EAAmBD,EAAgB,IAE5D,OACE,UAACb,EAAD,YACE,UAACC,EAAD,YACE,UAACC,EAAD,0BAAwBe,MACxB,UAACX,EAAD,YACE,UAACC,EAAD,YACE,SAAC9E,EAAD,oBACA,UAAC+E,EAAD,WACGM,EAAmB,EAAIW,EAAe,EADzC,WAEW,QAEb,UAAClB,EAAD,YACE,SAAC9E,EAAD,wBACA,UAAC+E,EAAD,WACGM,EAAmB,EAAIA,EAAmB,EAD7C,QACqD,WAGvD,UAACP,EAAD,YACE,SAAC9E,EAAD,2BACA,UAAC+E,EAAD,eAAWK,EAAe,EAAIA,EAAe,EAA7C,gBAEF,UAACN,EAAD,YACE,SAAC9E,EAAD,2BACA,UAAC+E,EAAD,WACGM,EAAmB,EAAIa,KAAKC,MAAMF,GAAmB,EADxD,kBAMN,UAACzB,EAAD,YACE,SAACC,EAAD,mCACCY,EAAmB,GAClB,SAACX,EAAD,UACGQ,EAAekB,KAAI,SAAAC,GAAO,OACzB,SAAC1B,EAAD,UAAyB0B,EAAQC,MAAMC,IAA5BF,EAAQG,IADM,OAK7B,SAAC5B,EAAD,sDAKT,C,uGCzEY6B,GAAuBtH,E,QAAAA,GAAO,MAAPA,CAAH,+I,mBCmBjC,EAbmB,WACjB,OACE,SAACG,EAAA,EAAD,WACE,UAACmH,EAAD,YAEI,SAAChG,EAAA,EAAD,KAEF,SAACuE,EAAA,EAAD,QAIP,C","sources":["components/BarBackground/BarBackground.styled.jsx","components/BarBackground/index.jsx","components/DailyCaloriesForm/DailyCaloriesForm.styled.jsx","components/DailyCaloriesForm/index.jsx","components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/index.jsx","pages/Calculator/Calculator.styled.js","pages/Calculator/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BackgroundStyled = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ImgLeaves = styled.img`\n  position: absolute;\n  right: -235px;\n  top: 35px;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  @media screen and (min-width: 1280px) {\n    display: block;\n  }\n`;\n\n// Tablet----------------------------\n\nexport const ImgLeavesTablet = styled.img`\n  position: absolute;\n  left: 399px;\n  top: 662px;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: block;\n  }\n`;\n","import {\n  BackgroundStyled,\n  ImgLeaves,\n  ImgLeavesTablet,\n} from './BarBackground.styled';\nimport {\n    leaves_desktop_calculator_1x,\n    leaves_desktop_calculator_2x,\n    leaves_tablet_calculator_1x,\n    leaves_tablet_calculator_2x\n} from './BarBackgroundImg';\n\nexport const BarBackground = ({ children }) => {\n  return (\n    <BackgroundStyled>\n      <ImgLeaves alt=\"im\" src={leaves_desktop_calculator_1x}\n        srcSet={`${leaves_desktop_calculator_2x} 2x`} />\n\n      {/* Tablet------------------------------------------------------------- */}\n\n      <ImgLeavesTablet\n        alt=\"im\"\n        src={leaves_tablet_calculator_1x}\n        srcSet={`${leaves_tablet_calculator_2x} 2x`}\n      />\n      {children}\n    </BackgroundStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 610px;\n  padding: 32px 20px 100px;\n  @media screen and (min-width: 768px) {\n    padding: 100px 32px 48px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 140px 16px 214px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: #212121;\n  font-size: 18px;\n  line-height: 140%;\n  margin-bottom: 34px;\n\n  @media (min-width: 768px) {\n    font-size: 34px;\n    line-height: 1.4;\n    margin-bottom: 68px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const WrapBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    width: 240px;\n    &:first-of-type {\n      margin-right: 32px;\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 32px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const LabelBlood = styled.label`\n  position: relative;\n  width: 100%;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom:40px ;\n`\nexport const BloodTypeTitle = styled.p`\nmargin-bottom: 8px;\n@media (min-width: 768px) {\n    height: 36px;\n    border-bottom: 1px solid #e0e0e0;\n\n    }`\n\n\n\nexport const Input = styled.input`\n  display: block;\n  border: none;\n  width: 100%;\n  border-bottom: 1px solid #e0e0e0;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  &:focus,\n  :hover {\n    border-bottom: 1px solid #fc842d;\n  }\n\n  &::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n\nexport const TitleRadioBtn = styled.p`\n  margin-bottom: 8px;\n  border-bottom: 1px solid #e0e0e0;\n  padding-bottom: 20px;\n`;\n\nexport const BloodList = styled.ul`\n  display: inline-flex;\n  width: 100%;\n  flex-flow: row no-wrap;\n`;\n\nexport const BloodListItem = styled.li`\n  margin-left: 24px;\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  &:checked,\n  &:not(:checked) {\n    position: absolute;\n    left: -9999px;\n  }\n  &:checked + label,\n  &:not(:checked) + label {\n    position: relative;\n    padding-left: 28px;\n    cursor: pointer;\n    line-height: 17px;\n    display: inline-block;\n    color: #9b9faa;\n  }\n  &:checked + label:before,\n  &:not(:checked) + label:before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 20px;\n    height: 20px;\n    border: 1px solid #e0e0e0;\n    border-radius: 100%;\n    background: #ffffff;\n  }\n  &:checked + label:after,\n  &:not(:checked) + label:after {\n    content: '';\n    width: 10px;\n    height: 10px;\n    background: #fc842d;\n    position: absolute;\n    top: 5px;\n    left: 5px;\n    border-radius: 100%;\n    -webkit-transition: all 0.25s ease;\n    transition: all 0.25s ease;\n  }\n  &:checked + label {\n    color: #fc842d;\n  }\n  &:not(:checked) + label:after {\n    opacity: 0;\n    -webkit-transform: scale(0);\n    transform: scale(0);\n  }\n  &:checked + label:after {\n    opacity: 1;\n    -webkit-transform: scale(1);\n    transform: scale(1);\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  align-self: center;\n  @media screen and (min-width: 768px) {\n    align-self: flex-start;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-left: auto;\n  }\n`;\n","import { Button } from 'components/Button';\nimport {\n  Wrap,\n  Title,\n  Form,\n  Label,\n  Input,\n  BloodList,\n  RadioButton,\n  ButtonContainer,\n  BloodListItem,\n  WrapBox,\n} from './DailyCaloriesForm.styled';\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeUserDate } from '../../redux/user/slice';\nimport { toggleModal } from '../../redux/modal/slice';\nimport { getDiet, getDietUser } from '../../redux/bloodDiet/operations';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n// import { redirect } from 'react-router-dom';\n\nexport const DailyCaloriesForm = () => {\n  const [apiSuccess, setApiSuccess] = useState(false);\n  const [height, setHeight] = useState('');\n  const [age, setAge] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [desiredWeight, setDesiredWeight] = useState('');\n  const [bloodType, setBloodType] = useState('');\n\n  const dispatch = useDispatch();\n  const savedFormData = useSelector(state => state.user.userDate);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const mds = window.matchMedia('(min-width: 768px)');\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      setHeight(savedFormData.height);\n      setAge(savedFormData.age);\n      setCurrentWeight(savedFormData.curWeight);\n      setDesiredWeight(savedFormData.desWeight);\n      setBloodType(savedFormData.bloodType);\n    }\n  }, [isLoggedIn, savedFormData]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'height':\n        setHeight(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      case 'currentWeight':\n        setCurrentWeight(value);\n        break;\n      case 'desiredWeight':\n        setDesiredWeight(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleRadioChange = event => {\n    setBloodType(event.target.value);\n    localStorage.setItem('bloodType', JSON.stringify(event.target.value));\n  };\n\n  const reset = () => {\n    setHeight('');\n    setAge('');\n    setCurrentWeight('');\n    setDesiredWeight('');\n    setBloodType('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    dispatch(\n      changeUserDate({\n        height: height,\n        age: age,\n        curWeight: currentWeight,\n        desWeight: desiredWeight,\n        bloodType: bloodType,\n      })\n    );\n    if (isLoggedIn) {\n      try {\n        await dispatch(\n          getDietUser({\n            height: Number(height),\n            age: Number(age),\n            curWeight: Number(currentWeight),\n            desWeight: Number(desiredWeight),\n            bloodType: Number(bloodType),\n          })\n        );\n        if (mds.matches) {\n          dispatch(toggleModal(true));\n        } else {\n          setApiSuccess(true);\n        }\n      } catch {\n        throw new Error();\n      }\n    } else {\n      try {\n        await dispatch(\n          getDiet({\n            height: Number(height),\n            age: Number(age),\n            curWeight: Number(currentWeight),\n            desWeight: Number(desiredWeight),\n            bloodType: Number(bloodType),\n          })\n        );\n\n        if (mds.matches) {\n          dispatch(toggleModal(true));\n        } else {\n          setApiSuccess(true);\n        }\n      } catch {\n        throw new Error();\n      }\n    }\n    reset();\n  };\n  if (apiSuccess && isLoggedIn) return <Navigate to=\"/modal\" />;\n  if (apiSuccess && !isLoggedIn) return <Navigate to=\"/diet\" />;\n\n  return (\n    <Wrap>\n      <Title>Calculate your daily calorie intake right now</Title>\n      <Form onSubmit={handleSubmit}>\n        <WrapBox>\n          <Label htmlFor=\"height\">\n            Height *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"height\"\n              type=\"number\"\n              name=\"height\"\n              value={height}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"age\">\n            Age *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"age\"\n              required\n              type=\"number\"\n              name=\"age\"\n              value={age}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"currentWeight\">\n            Current weight *\n            <Input\n              pattern=\"[0-9]\"\n              required\n              id=\"currentWeight\"\n              type=\"number\"\n              name=\"currentWeight\"\n              value={currentWeight}\n              onChange={handleInputChange}\n            />\n          </Label>\n        </WrapBox>\n        <WrapBox>\n          <Label htmlFor=\"desiredWeight\">\n            Desired weight *\n            <Input\n              pattern=\"[0-9]\"\n              id=\"desiredWeight\"\n              required\n              name=\"desiredWeight\"\n              type=\"number\"\n              value={desiredWeight}\n              onChange={handleInputChange}\n            />\n          </Label>\n          <Label htmlFor=\"bloodType\" required>\n            <p style={{ marginBottom: '8px' }}>Blood type *</p>\n            <BloodList>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  // checked\n                  name=\"bloodType\"\n                  id=\"blood-inp-1\"\n                  value={1}\n                  checked={bloodType === '1' ? true : false}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-1\">1</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-2\"\n                  value={2}\n                  checked={bloodType === '2' ? true : false}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-2\">2</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-3\"\n                  value={3}\n                  checked={bloodType === '3' ? true : false}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-3\">3</label>\n              </BloodListItem>\n              <BloodListItem>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"bloodType\"\n                  id=\"blood-inp-4\"\n                  value={4}\n                  checked={bloodType === '4' ? true : false}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor=\"blood-inp-4\">4</label>\n              </BloodListItem>\n            </BloodList>\n          </Label>\n        </WrapBox>\n        <ButtonContainer>\n          <Button type=\"submit\" text=\"Start losing weight\" />\n        </ButtonContainer>\n      </Form>\n    </Wrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 20px 12px 20px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: 80px 0px 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding: 145px 94px 116px 94px;\n  }\n`;\n\nexport const BoxList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    margin-right: 97px;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const ListTitle = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #212121;\n  text-align: start;\n  margin-bottom: 30px;\n`;\n\nexport const List = styled('ul')`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  list-style-position: inside;\n  margin: 0;\n  padding: 0;\n  width: 400px;\n  max-height: 180px;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n`;\n\nexport const Item = styled.li`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const PreContent = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  color: #9b9faa;\n`;\nexport const ContainerItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const Title = styled.div`\n  width: 180px;\n  @media screen and (min-width: 768px) {\n    width: 182px;\n  }\n`;\nexport const Content = styled.div`\n  width: 88px;\n`;\n","import React from 'react';\nimport {\n  Box,\n  List,\n  ListTitle,\n  PreContent,\n  Item,\n  BoxList,\n  Container,\n  Title,\n  Content,\n  ContainerItem,\n} from './RightSideBar.styled';\nimport { useAuth } from 'hooks/useAuth';\nimport { diarySelectors } from 'redux/diary/diarySelectors';\nimport { useSelector } from 'react-redux';\n\nexport const RightSideBar = () => {\n  const { user } = useAuth();\n  const notRecProducts = user.data.user.notRecProducts;\n  const dailyCalorie = user.data.user.dailyCalorie;\n\n  const caloricityPerDay = useSelector(diarySelectors.selectCaloricityPerDay);\n  const selectedDate = useSelector(diarySelectors.selectDate);\n  const normalizedSelectedDate = new Date(selectedDate)\n    .toLocaleString('')\n    .slice(0, 10);\n    const date = new Date(Date.UTC(2012, 11, 12, 3, 0, 0));\n    console.log(date.toLocaleString());\n  const leftCalories = dailyCalorie - caloricityPerDay;\n  const percentOfNormal = (caloricityPerDay / dailyCalorie) * 100;\n\n  return (\n    <Box>\n      <BoxList>\n        <ListTitle>Summary for {normalizedSelectedDate}</ListTitle>\n        <Container>\n          <ContainerItem>\n            <Title>Left</Title>\n            <Content>\n              {caloricityPerDay > 0 ? leftCalories : 0} kcal\n            </Content>{' '}\n          </ContainerItem>\n          <ContainerItem>\n            <Title>Consumed</Title>\n            <Content>\n              {caloricityPerDay > 0 ? caloricityPerDay : 0} kcal{' '}\n            </Content>\n          </ContainerItem>\n          <ContainerItem>\n            <Title>Daily rate </Title>\n            <Content> {dailyCalorie > 0 ? dailyCalorie : 0} kcal </Content>\n          </ContainerItem>\n          <ContainerItem>\n            <Title>% of normal</Title>\n            <Content>\n              {caloricityPerDay > 0 ? Math.round(percentOfNormal) : 0} %\n            </Content>\n          </ContainerItem>\n        </Container>\n      </BoxList>\n      <BoxList>\n        <ListTitle>Food not recommended</ListTitle>\n        {caloricityPerDay > 0 ? (\n          <List>\n            {notRecProducts.map(product => (\n              <Item key={product._id}>{product.title.ua}</Item>\n            ))}\n          </List>\n        ) : (\n          <PreContent> Your diet will be displayed here </PreContent>\n        )}\n      </BoxList>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const CalculatorStyledPage = styled('div')`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n","import { DailyCaloriesForm } from 'components/DailyCaloriesForm';\nimport { RightSideBar } from 'components/RightSideBar';\nimport { \n\n  CalculatorStyledPage } from './Calculator.styled';\n\nimport { BarBackground } from 'components/BarBackground';\n\nconst Calculator = () => {\n  return (\n    <BarBackground>\n      <CalculatorStyledPage>\n\n          <DailyCaloriesForm />\n\n        <RightSideBar />\n      </CalculatorStyledPage>\n    </BarBackground>\n  );\n};\n\nexport default Calculator;\n"],"names":["BackgroundStyled","styled","ImgLeaves","ImgLeavesTablet","BarBackground","children","alt","src","leaves_desktop_calculator_1x","srcSet","leaves_desktop_calculator_2x","leaves_tablet_calculator_1x","leaves_tablet_calculator_2x","Wrap","Title","Form","WrapBox","Label","Input","BloodList","BloodListItem","RadioButton","ButtonContainer","DailyCaloriesForm","useState","apiSuccess","setApiSuccess","height","setHeight","age","setAge","currentWeight","setCurrentWeight","desiredWeight","setDesiredWeight","bloodType","setBloodType","dispatch","useDispatch","savedFormData","useSelector","state","user","userDate","isLoggedIn","auth","mds","window","matchMedia","useEffect","curWeight","desWeight","handleInputChange","event","currentTarget","name","value","handleRadioChange","target","localStorage","setItem","JSON","stringify","handleSubmit","preventDefault","changeUserDate","getDietUser","Number","matches","toggleModal","Error","getDiet","to","onSubmit","htmlFor","pattern","required","id","type","onChange","style","marginBottom","checked","Button","text","Box","BoxList","ListTitle","List","Item","PreContent","Container","ContainerItem","Content","RightSideBar","useAuth","notRecProducts","data","dailyCalorie","caloricityPerDay","diarySelectors","selectedDate","normalizedSelectedDate","Date","toLocaleString","slice","date","UTC","console","log","leftCalories","percentOfNormal","Math","round","map","product","title","ua","_id","CalculatorStyledPage"],"sourceRoot":""}