{"version":3,"file":"static/js/219.83945e68.chunk.js","mappings":"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","sources":["components/BarBackground/BarBackground.styled.jsx","components/BarBackground/index.jsx","components/RightSideBar/RightSideBar.styled.js","components/RightSideBar/index.jsx","redux/user/userOperation.js","components/DiaryDateСalendar/DiaryDateСalendar.styled.js","components/DiaryDateСalendar/index.jsx","components/DiaryProductsList/DiaryItem.styled.js","components/DiaryProductsList/DiaryItem.js","hooks/useAdaptivString.js","components/DiaryProductsList/DiaryProductsList.styled.js","components/DiaryProductsList/DiaryProductsList.js","pages/Diary/Diary.styled.js","pages/Diary/index.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BackgroundStyled = styled.div`\n  /* width: 100%;\n  height: 100%; */\n  width: 100%;\n    overflow: hidden;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    @media screen and (min-width: 768px) {\n    min-height: 1024px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-height: 850px;\n  }\n`;\n\nexport const ImgLeaves = styled.img`\n  position: absolute;\n  right: -235px;\n  top: 35px;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  @media screen and (min-width: 1280px) {\n    display: block;\n  }\n`;\n\n// Tablet----------------------------\n\nexport const ImgLeavesTablet = styled.img`\n  position: absolute;\n  right: -233px;\n  bottom: -90px;\n  z-index: 1;\n  display: none;\n  pointer-events: none;\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    display: block;\n  }\n`;\n","import {\n  BackgroundStyled,\n  ImgLeaves,\n  ImgLeavesTablet,\n} from './BarBackground.styled';\nimport {\n    leaves_desktop_calculator_1x,\n    leaves_desktop_calculator_2x,\n    leaves_tablet_calculator_1x,\n    leaves_tablet_calculator_2x\n} from './BarBackgroundImg';\n\nexport const BarBackground = ({ children }) => {\n  return (\n    <BackgroundStyled>\n      <ImgLeaves alt=\"im\" src={leaves_desktop_calculator_1x}\n        srcSet={`${leaves_desktop_calculator_2x} 2x`} />\n\n      {/* Tablet------------------------------------------------------------- */}\n\n      <ImgLeavesTablet\n        alt=\"im\"\n        src={leaves_tablet_calculator_1x}\n        srcSet={`${leaves_tablet_calculator_2x} 2x`}\n      />\n      {children}\n    </BackgroundStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\nwidth:100%;\n  display: flex;\n  flex-direction: column;\n  padding: 40px 20px 12px 20px;\n  background-color: #f0f1f3;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    padding: 80px 32px 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    padding: 145px 94px 116px 94px;\n  }\n`;\n\nexport const BoxList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-bottom: 40px;\n  @media screen and (min-width: 1280px) {\n   margin-right: 97px;\n   &:last-child {\n    margin-bottom: 0;\n  }\n  }\n`;\n\nexport const ListTitle = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #212121;\n  text-align: start;\n  margin-bottom: 30px;\n`;\n\nexport const List = styled('ul')`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  list-style-position: inside;\n  margin: 0;\n  padding: 0;\n  max-width: 400px;\n  max-height: 180px;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n  z-index: 10;\n`;\n\nexport const Item = styled.li`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const PreContent = styled.p`\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-family: 'Verdana';\n  font-style: normal;\n  font-weight: 400;\n  color: #9b9faa;\n \n`;\nexport const ContainerItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const Title = styled.div`\n  width: 180px;\n  @media screen and (min-width: 768px) {\n    width: 182px;\n  }\n`;\nexport const Content = styled.div`\n  width: 88px;\n`;\n","import React from 'react';\nimport {\n  Box,\n  List,\n  ListTitle,\n  PreContent,\n  Item,\n  BoxList,\n  Container,\n  Title,\n  Content,\n  ContainerItem,\n} from './RightSideBar.styled';\nimport { diarySelectors } from 'redux/diary/diarySelectors';\nimport { useSelector } from 'react-redux';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport const RightSideBar = () => {\n  const { user } = useAuth();\n  const notRecProducts = user.notRecProducts || [];\n  const dailyCalorie = user.dailyCalorie || 0;\n\n  const caloricityPerDay = useSelector(diarySelectors.selectCaloricityPerDay);\n  const selectedDate = useSelector(diarySelectors.selectDate);\n  const normalizedSelectedDate = new Date(selectedDate)\n    .toLocaleString()\n    .slice(0, 10);\n\n  const leftCalories = dailyCalorie - caloricityPerDay;\n  const percentOfNormal = (caloricityPerDay / dailyCalorie) * 100;\n\n  return (\n    <Box>\n      <BoxList>\n        <ListTitle>Summary for {normalizedSelectedDate}</ListTitle>\n        <Container>\n          <ContainerItem>\n            <Title>Left</Title>\n            <Content>\n              {caloricityPerDay > 0 ? Math.round(leftCalories) : 0} kcal\n            </Content>{' '}\n          </ContainerItem>\n          <ContainerItem>\n            <Title>Consumed</Title>\n            <Content>\n              {caloricityPerDay > 0 ? Math.round(caloricityPerDay) : 0} kcal{' '}\n            </Content>\n          </ContainerItem>\n          <ContainerItem>\n            <Title>Daily rate </Title>\n            <Content>\n              {' '}\n              {dailyCalorie > 0 ? Math.round(dailyCalorie) : 0} kcal{' '}\n            </Content>\n          </ContainerItem>\n          <ContainerItem>\n            <Title>% of normal</Title>\n            <Content>\n              {caloricityPerDay > 0 ? Math.round(percentOfNormal) : 0} %\n            </Content>\n          </ContainerItem>\n        </Container>\n      </BoxList>\n      <BoxList>\n        <ListTitle>Food not recommended</ListTitle>\n        {caloricityPerDay > 0 ? (\n          <List>\n            {notRecProducts.map(product => (\n              <Item key={product._id}>{product.title.ua}</Item>\n            ))}\n          </List>\n        ) : (\n          <PreContent> Your diet will be displayed here </PreContent>\n        )}\n      </BoxList>\n    </Box>\n  );\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { apiAxios } from 'servises/api';\n\nexport const updateUser = createAsyncThunk(\n  'user/updateUser',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await apiAxios.patch(`users/update`, credentials);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const getUser = createAsyncThunk(\n  'user/getUser',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await apiAxios.get('users/current', credentials);\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import styled from '@emotion/styled';\nimport Datetime from 'react-datetime';\nimport { theme } from '../Theme';\nexport const Container = styled.div`\n  display: flex;\n  gap: 21px;\n  align-items: baseline;\n  font-family: 'Verdana';\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.s};\n  color: ${theme.colors.textSecond};\n  line-height: 17px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 49px;\n  }\n`;\n\nexport const DatetimeStyled = styled(Datetime)`\n  .form-control {\n    border: none;\n    margin-bottom: 32px;\n    width: 116px;\n    color: ${theme.colors.textSecond};\n    font-weight: ${theme.fontWeights.bold};\n    font-size: 18px;\n    padding: 0;\n    background: transparent;\n\n    @media screen and (min-width: 768px) {\n      font-size: 34px;\n      width: 219px;\n    }\n  }\n  .rdtPicker td.rdtToday:before {\n    border-bottom-color: ${theme.colors.accent};\n  }\n  .rdtPicker td.rdtActive {\n    background-color: ${theme.colors.accent};\n  }\n  .rdtPicker td.rdtActive:hover {\n    background-color: ${theme.colors.accent};\n  }\n`;\n\nexport const IconCalendarStyled = styled.svg`\n  width: 20px;\n  height: 18px;\n  & :hover {\n    cursor: pointer;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'react-datetime/css/react-datetime.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport moment from 'moment';\nimport 'moment/locale/en-au';\nimport {\n  DatetimeStyled,\n  Container,\n  IconCalendarStyled,\n} from './DiaryDateСalendar.styled';\nimport sprite from 'images/icons.svg';\nimport { setDate } from 'redux/diary/diarySlice';\nimport { creatNotifyError } from 'helpers/createNotify';\n\nexport const DiaryDateCalendar = () => {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(moment(new Date()));\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dateFirstAdded = 'November 15, 2022';\n  const first = moment(new Date(dateFirstAdded));\n  const current = moment(new Date());\n\n  const normalizeDate = date => {\n    return `${date.format('YYYY.MM.DD')}Z`;\n  };\n\n  useEffect(() => {\n    dispatch(setDate(normalizeDate(value)));\n  }, [value, dispatch]);\n\n  const onChange = newValue => {\n    setIsOpen(false);\n\n    if (newValue > current || newValue < first) {\n      creatNotifyError('Selected date is not valid');\n      setValue(current);\n      return;\n    }\n    setValue(newValue);\n  };\n\n  return (\n    <Container>\n      <DatetimeStyled\n        locale=\"en-au\"\n        closeOnSelect={true}\n        dateFormat=\"DD.MM.YYYY\"\n        timeFormat={false}\n        open={isOpen}\n        value={value}\n        onChange={onChange}\n      />\n      <button\n        onClick={() => {\n          setIsOpen(!isOpen);\n        }}\n      >\n        <IconCalendarStyled>\n          <use href={sprite + '#icon-calendar_18x20'} />\n        </IconCalendarStyled>\n      </button>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ProductTitle = styled.div`\n  position: relative;\n  text-align: left;\n  color: ${p => p.theme.colors.textSecond}; //#212121\n  &::after {\n    content: '';\n    bottom: -8px;\n    left: 0;\n    width: 100%;\n    position: absolute;\n    border-bottom: 2px solid #e0e0e0;\n\n    @media screen and (min-width: 768px) {\n      bottom: -20px;\n    }\n  }\n`;\nexport const ProductProp = styled.div`\n  position: relative;\n  text-align: left;\n  color: ${p => p.theme.colors.textSecond}; //#212121\n  &::after {\n    content: '';\n    bottom: -8px;\n    left: 0;\n    width: 100%;\n    position: absolute;\n    border-bottom: 2px solid #e0e0e0;\n\n    @media screen and (min-width: 768px) {\n      bottom: -20px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    text-align: right;\n  }\n`;\n\nexport const ExitBtn = styled.button`\n  background: none;\n  cursor: pointer;\n  margin-left: 10px;\n`;\n\nexport const Unit = styled.span`\n  font-size: 10px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { removeProduct } from 'redux/diary/diaryOperations';\nimport { ProductTitle, ProductProp, ExitBtn, Unit } from './DiaryItem.styled';\nimport sprite from 'images/icons.svg';\nimport { useAdaptivString } from 'hooks/useAdaptivString';\n\nexport const DiaryItem = ({ product }) => {\n  const dispatch = useDispatch();\n  const title = useAdaptivString(product.product);\n  const handleDelete = () => {\n    dispatch(removeProduct(product._id));\n  };\n\n  return (\n    <>\n      <ProductTitle>{title}</ProductTitle>\n      <ProductProp>\n        {product?.weight}\n        <span> g</span>\n      </ProductProp>\n      <ProductProp>\n        {Math.round(product?.calories)}\n        <Unit> kcal</Unit>\n      </ProductProp>\n\n      <ExitBtn type=\"button\" onClick={handleDelete}>\n        <svg width=\"12px\" height=\"12px\">\n          <use href={sprite + '#icon-cross_delete_12x12'} />\n        </svg>\n      </ExitBtn>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useWindowResize } from './useWindowResize';\n\nexport const useAdaptivString = str => {\n  const [normalizeString, setNormalizeString] = useState('');\n  const { width } = useWindowResize();\n  useEffect(() => {\n    if (!str) return;\n    if (width > 767) {\n      return setNormalizeString(\n        str.length > 25 ? str.slice(0, 22) + '...' : str\n      );\n    } else {\n      return setNormalizeString(\n        str.length > 18 ? str.slice(0, 15) + '...' : str\n      );\n    }\n  }, [str, width]);\n  return normalizeString;\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  font-family: 'Verdana';\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.normal};\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 130px 49px 58px 10px;\n  gap: 8px;\n  align-items: stretch;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 30px;\n    grid-template-columns: 240px 107px 106px 12px;\n  }\n`;\n\nexport const ProductListBox = styled.div`\n  position: relative;\n  width: 314px;\n  /* padding-left: 20px;\n  padding-right: 20px; */\n  height: 252px;\n  /* margin-left: auto;\n  margin-right: auto; */\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    position: absolute;\n    right: 0;\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #f0f1f3;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${p => p.theme.colors.blue};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 610px;\n    height: 244px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 633px;\n    /* margin-left: 0;\n    padding-left: 16px; */\n    height: 271px;\n  }\n`;\n","import { DiaryItem } from './DiaryItem';\nimport { useSelector } from 'react-redux';\nimport { diarySelectors } from 'redux/diary/diarySelectors';\nimport Loader from 'components/Loader/Loader';\nimport { ListItem, List, ProductListBox } from './DiaryProductsList.styled';\n\nexport const DiaryProductsList = () => {\n  const productsByDate = useSelector(diarySelectors.selectProductByDate);\n  const isLoading = useSelector(diarySelectors.selectIsLoading);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ProductListBox>\n        <List>\n          {productsByDate?.length ? (\n            productsByDate.map(product => (\n              <ListItem key={product._id}>\n                <DiaryItem product={product} />\n              </ListItem>\n            ))\n          ) : (\n            <p>No products found for this date</p>\n          )}\n        </List>\n      </ProductListBox>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { theme } from 'components/Theme';\n\nexport const DiaryStyledPage = styled('div')`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\nexport const DiaryStyled = styled('div')`\n  padding-top: 80px;\n  // padding-left: 20px;\n  // padding-right: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    padding-top: 100px;\n    padding-left: 32px;\n    align-items: start;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 145px;\n  }\n`;\n\nexport const Wrapper = styled('div')`\n  @media screen and (min-width: 768px) {\n    padding-top: 60px;\n  }\n`;\n\nexport const DiaryAdd = styled('div')`\n  padding-bottom: 60px;\n`;\n\nexport const DiaryCalendar = styled('div')`\n  margin-right: 120px;\n`;\n\nexport const MobileWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MobileButton = styled(Link)`\n  margin: 30px 0px;\n  color: ${theme.colors.white};\n  font-weight: ${theme.fontWeights.bold};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${theme.radii.round};\n  width: 50px;\n  height: 50px;\n  font-size: ${theme.fontSizes.l};\n  background: ${theme.colors.accent};\n  box-shadow: 0px 4px 10px 0px #fc842d80;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getByDate } from 'redux/diary/diaryOperations';\nimport { getUser } from '../../redux/user/userOperation';\nimport { diarySelectors } from 'redux/diary/diarySelectors';\nimport { DiaryAddProductForm } from 'components/DiaryAddProductForm';\nimport { DiaryDateCalendar } from 'components/DiaryDateСalendar';\nimport { DiaryProductsList } from 'components/DiaryProductsList';\nimport { RightSideBar } from 'components/RightSideBar';\n\nimport {\n  DiaryStyled,\n  Wrapper,\n  DiaryAdd,\n  DiaryCalendar,\n  MobileWrapper,\n  MobileButton,\n  DiaryStyledPage,\n} from './Diary.styled';\nimport { useWindowResize } from 'hooks/useWindowResize';\nimport { BarBackground } from 'components/BarBackground';\n// import { authSelectors } from '../../redux/auth/auth-selectors';\n// import { useSelector } from 'react-redux';\n\nexport const Diary = () => {\n  const date = useSelector(diarySelectors.selectDate);\n  const dispatch = useDispatch();\n\n  const { width } = useWindowResize();\n  useEffect(() => {\n    if (date) {\n      dispatch(getUser());\n      dispatch(getByDate(date));\n    }\n  }, [date, dispatch]);\n\n  return (\n    <>\n    <BarBackground/>\n      <DiaryStyledPage>\n        <DiaryStyled>\n          <DiaryCalendar>\n            <DiaryDateCalendar />\n          </DiaryCalendar>\n          {width > 767 ? (\n            <Wrapper>\n              <DiaryAdd>\n                <DiaryAddProductForm />\n              </DiaryAdd>\n              <DiaryProductsList />\n            </Wrapper>\n          ) : (\n            <MobileWrapper>\n              <DiaryProductsList />\n              <MobileButton to=\"/add\">+</MobileButton>\n            </MobileWrapper>\n          )}\n        </DiaryStyled>\n        <RightSideBar />\n      </DiaryStyledPage>\n      {/* </BarBackground> */}\n      </>\n  );\n};\n\nexport default Diary;\n"],"names":["BackgroundStyled","styled","ImgLeaves","ImgLeavesTablet","BarBackground","children","alt","src","leaves_desktop_calculator_1x","srcSet","leaves_desktop_calculator_2x","leaves_tablet_calculator_1x","leaves_tablet_calculator_2x","Box","BoxList","ListTitle","List","Item","PreContent","Container","ContainerItem","Title","Content","RightSideBar","user","useAuth","notRecProducts","dailyCalorie","caloricityPerDay","useSelector","diarySelectors","selectedDate","normalizedSelectedDate","Date","toLocaleString","slice","leftCalories","percentOfNormal","Math","round","map","product","title","ua","_id","getUser","createAsyncThunk","credentials","thunkAPI","apiAxios","data","rejectWithValue","message","theme","DatetimeStyled","Datetime","IconCalendarStyled","DiaryDateCalendar","dispatch","useDispatch","useState","moment","value","setValue","isOpen","setIsOpen","first","current","useEffect","setDate","format","locale","closeOnSelect","dateFormat","timeFormat","open","onChange","newValue","creatNotifyError","onClick","href","sprite","ProductTitle","p","colors","textSecond","ProductProp","ExitBtn","Unit","DiaryItem","str","normalizeString","setNormalizeString","width","useWindowResize","length","useAdaptivString","weight","calories","type","removeProduct","height","fontSizes","s","fontWeights","normal","ListItem","ProductListBox","blue","DiaryProductsList","productsByDate","isLoading","Loader","DiaryStyledPage","DiaryStyled","Wrapper","DiaryAdd","DiaryCalendar","MobileWrapper","MobileButton","Link","Diary","date","getByDate","DiaryAddProductForm","to"],"sourceRoot":""}